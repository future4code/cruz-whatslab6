{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Box1","styled","div","Box2","BoxInputs","InputNome","input","InputMensagem","App","state","arrayMensagens","inputUsuario","inputMensagem","onChangeInputUsuario","event","setState","target","value","onChangeInputMensagem","adicionaMensagem","novoArrayMensagens","usuario","textoMensagem","this","map","msg","index","placeholder","onChange","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAGMA,EAAOC,IAAOC,IAAV,8PAaJC,EAAOF,IAAOC,IAAV,oIAQJE,EAAYH,IAAOC,IAAV,8CAITG,EAAYJ,IAAOK,MAAV,6CAITC,EAAgBN,IAAOK,MAAV,6CA2DJE,E,4MAtDbC,MAAQ,CACNC,eAAgB,GAChBC,aAAc,GACdC,cAAe,I,EAGjBC,qBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEJ,aAAcG,EAAME,OAAOC,S,EAG7CC,sBAAwB,SAACJ,GACvB,EAAKC,SAAS,CAAEH,cAAeE,EAAME,OAAOC,S,EAG9CE,iBAAmB,WACjB,IAKMC,EAAkB,CALR,CACdC,QAAS,EAAKZ,MAAME,aACpBW,cAAe,EAAKb,MAAMG,gBAGJ,mBAAgB,EAAKH,MAAMC,iBAEnD,EAAKK,SAAS,CAACL,eAAgBU,EAAoBR,cAAe,M,4CAGpE,WACE,OACE,eAACZ,EAAD,WACE,cAACG,EAAD,UACGoB,KAAKd,MAAMC,eAAec,KAAI,SAACC,EAAKC,GACnC,OAAO,8BACL,iCAASD,EAAIJ,UADR,KAC4BI,EAAIH,gBADtBI,QAKrB,eAACtB,EAAD,WACE,cAACC,EAAD,CACEsB,YAAa,OACbC,SAAYL,KAAKV,qBACjBI,MAASM,KAAKd,MAAME,eAGtB,cAACJ,EAAD,CACEoB,YAAa,WACbC,SAAYL,KAAKL,sBACjBD,MAASM,KAAKd,MAAMG,gBAEtB,wBAAQiB,QAAWN,KAAKJ,iBAAxB,8B,GAhDQW,IAAMC,WCxBTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fe043479.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\nconst Box1 = styled.div`\n  display: flex;\n  flex-direction: column;\n  -webkit-box-pack: end;\n  justify-content: flex-end;\n  box-sizing: border-box;\n  border: 1px solid black;\n  height: 100vh;\n  width: 600px;\n  margin: auto;\n  padding: 20px;\n`\n\nconst Box2 = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  flex-grow: 1;\n  padding: 20px;\n  margin:auto;\n`\n\nconst BoxInputs = styled.div`\n  display: flex;\n`\n\nconst InputNome = styled.input`\n  width: 100px;\n`\n\nconst InputMensagem = styled.input`\n  flex-grow: 1;\n`\n\nclass App extends React.Component {\n  state = {\n    arrayMensagens: [],\n    inputUsuario: '',\n    inputMensagem: ''\n  }\n\n  onChangeInputUsuario= (event) => {\n    this.setState({ inputUsuario: event.target.value });\n  }\n\n  onChangeInputMensagem = (event) => {\n    this.setState({ inputMensagem: event.target.value });\n  }\n\n  adicionaMensagem = () => {\n    const novaMsg = {\n      usuario: this.state.inputUsuario,\n      textoMensagem: this.state.inputMensagem\n    }\n    \n    const novoArrayMensagens = [novaMsg, ...this.state.arrayMensagens]\n\n    this.setState({arrayMensagens: novoArrayMensagens, inputMensagem: ''})\n  }\n\n  render() {\n    return (\n      <Box1>\n        <Box2>\n          {this.state.arrayMensagens.map((msg, index) => {\n            return <p key = {index} > \n              <strong>{msg.usuario}</strong>: {msg.textoMensagem}\n            </p>\n          })}\n        </Box2>\n        <BoxInputs>\n          <InputNome \n            placeholder={'Nome'}\n            onChange = {this.onChangeInputUsuario}\n            value = {this.state.inputUsuario}\n          />\n\n          <InputMensagem \n            placeholder={'Mensagem'}\n            onChange = {this.onChangeInputMensagem}\n            value = {this.state.inputMensagem}\n          />\n          <button onClick = {this.adicionaMensagem}>Enviar</button>\n        </BoxInputs>\n      </Box1>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}