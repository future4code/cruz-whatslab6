{"version":3,"sources":["img/envia-icone.svg","App.js","reportWebVitals.js","index.js"],"names":["Box1","styled","div","BoxMensagens","BoxInputs","InputNome","input","InputMensagem","ButtonEnviar","BoxMensagem","BoxMensagemEu","textInput","React","createRef","App","state","arrayMensagens","usuario","textoMensagem","inputUsuario","inputMensagem","onChangeInputUsuario","event","key","current","focus","setState","target","value","onChangeInputMensagem","adicionaMensagem","onDoubleClickMensagem","click","alert","novoArrayMensagens","this","map","msg","index","useDoubleClick","onKeyPress","placeholder","onChange","ref","onClick","src","iconeEnviar","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAAe,MAA0B,wC,OCGnCA,EAAOC,IAAOC,IAAV,gSAeJC,EAAeF,IAAOC,IAAV,yKASZE,EAAYH,IAAOC,IAAV,gEAKTG,EAAYJ,IAAOK,MAAV,+FAOTC,EAAgBN,IAAOK,MAAV,gHAOfE,EAAeP,IAAOC,IAAV,qSAeVO,EAAcR,IAAOC,IAAV,sQAgBXQ,EAAgBT,YAAOQ,EAAPR,CAAH,mFAIbU,EAAYC,IAAMC,YAuFTC,E,4MApFbC,MAAQ,CACNC,eAAgB,CAAC,CACfC,QAAS,SACTC,cAAe,mDAEjBC,aAAc,GACdC,cAAe,I,EAEjBC,qBAAsB,SAACC,GACL,SAAbA,EAAMC,IACPZ,EAAUa,QAAQC,QAGpB,EAAKC,SAAS,CAAEP,aAAcG,EAAMK,OAAOC,S,EAI7CC,sBAAwB,SAACP,GACP,SAAbA,EAAMC,IACP,EAAKO,mBAGP,EAAKJ,SAAS,CAAEN,cAAeE,EAAMK,OAAOC,S,EAI9CG,sBAAwB,SAACC,GACrBC,MAAM,gB,EAGVH,iBAAmB,WACjB,IAKMI,EAAkB,CALR,CACdjB,QAAS,EAAKF,MAAMI,aACpBD,cAAe,EAAKH,MAAMK,gBAGJ,mBAAgB,EAAKL,MAAMC,iBAEnD,EAAKU,SAAS,CAACV,eAAgBkB,EAAoBd,cAAe,M,4CAGpE,WAAU,IAAD,OACP,OACE,eAACpB,EAAD,WACE,cAACG,EAAD,UACGgC,KAAKpB,MAAMC,eAAeoB,KAAI,SAACC,EAAKC,GACnC,MAAkB,MAAfD,EAAIpB,SAAkC,MAAfoB,EAAIpB,SAAmB,KAC1C,cAACP,EAAD,CACP6B,eAAgB,EAAKR,sBADd,SAEL,4BAAIM,EAAInB,iBAFmBoB,GAMpB,eAAC7B,EAAD,CACT8B,eAAgB,EAAKR,sBADZ,UAEP,8BAAG,iCAASM,EAAIpB,UAAhB,OAAsC,4BAAIoB,EAAInB,kBAFnBoB,QAOjC,eAAClC,EAAD,WACE,cAACC,EAAD,CAEAmC,WAAcL,KAAKd,qBACjBoB,YAAa,OACbC,SAAYP,KAAKd,qBACjBO,MAASO,KAAKpB,MAAMI,eAGtB,cAACZ,EAAD,CACCoC,IAAKhC,EACN6B,WAAcL,KAAKN,sBACjBY,YAAa,WACbC,SAAYP,KAAKN,sBACjBD,MAASO,KAAKpB,MAAMK,gBAEtB,cAACZ,EAAD,CAAcoC,QAAWT,KAAKL,iBAA9B,SACA,qBAAKe,IAAKC,gB,GA9EFlC,IAAMmC,WCvETC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bb78af82.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/envia-icone.1bae9973.svg\";","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport iconeEnviar from './img/envia-icone.svg'\r\nconst Box1 = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  -webkit-box-pack: end;\r\n  justify-content: flex-end;\r\n  box-sizing: border-box;\r\n  border: 1px solid black;\r\n  height: 100vh;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: auto;\r\n  background-color: #ECE5DD;\r\n\r\n`\r\n\r\nconst BoxMensagens = styled.div`\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  flex-grow: 1;\r\n  padding: 20px;\r\n  justify-content: flex-start;\r\n  overflow-y: auto;\r\n`\r\n\r\nconst BoxInputs = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n`\r\n\r\nconst InputNome = styled.input`\r\nmargin:5px;\r\n  font-size: 18px;\r\n  padding: 5px;\r\n  width: 100px;\r\n`\r\n\r\nconst InputMensagem = styled.input`\r\n  flex-grow: 1;\r\nmargin:5px;\r\n  font-size: 18px;\r\n  padding: 5px;\r\n  width: 100px;\r\n`\r\nlet ButtonEnviar = styled.div`\r\nbackground-color: #25D366AA;\r\nfont-size: 18px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  width:40px;\r\n  height: 40px;\r\n  justify-content:center;\r\n  align-items:center;\r\n  border-radius:50%;\r\n  background-image:url(iconeEnviar);\r\n:hover{\r\nbackground-color: #25D366;\r\n`\r\n\r\nconst BoxMensagem = styled.div`\r\n  border-radius: 3px;\r\n  background-color: #DCF8C6;\r\n  margin: 5px;\r\n  width: 80%;\r\n  display:flex;\r\n  flex-direction: column;\r\n  font-size:18px;\r\n  p{\r\n    padding: 2px;\r\n    margin: 2px;\r\n  }\r\n  p strong{\r\n    color: #25D366;\r\n  }\r\n`\r\nconst BoxMensagemEu = styled(BoxMensagem)`\r\n  background-color: #FFFFFF;\r\n  align-self: flex-end;\r\n`\r\nconst textInput = React.createRef();\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    arrayMensagens: [{\r\n      usuario: \"Adimin\",\r\n      textoMensagem: \"Este Ã© o seu whats use com responsabilidade\"\r\n    }],\r\n    inputUsuario: '',\r\n    inputMensagem: ''\r\n  }\r\n  onChangeInputUsuario= (event) => {\r\n    if(event.key == \"Enter\"){\r\n      textInput.current.focus();\r\n    }\r\n    else{\r\n    this.setState({ inputUsuario: event.target.value });\r\n    }\r\n  }\r\n\r\n  onChangeInputMensagem = (event) => {\r\n    if(event.key == \"Enter\"){\r\n      this.adicionaMensagem();\r\n    }\r\n    else{\r\n    this.setState({ inputMensagem: event.target.value });\r\n    }\r\n  }\r\n\r\n  onDoubleClickMensagem = (click) => {\r\n      alert(\"Dois clicks\");\r\n  }\r\n\r\n  adicionaMensagem = () => {\r\n    const novaMsg = {\r\n      usuario: this.state.inputUsuario,\r\n      textoMensagem: this.state.inputMensagem\r\n    }\r\n    \r\n    const novoArrayMensagens = [novaMsg, ...this.state.arrayMensagens]\r\n\r\n    this.setState({arrayMensagens: novoArrayMensagens, inputMensagem: ''})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box1>\r\n        <BoxMensagens >\r\n          {this.state.arrayMensagens.map((msg, index) => {\r\n            if(msg.usuario == \"eu\" || msg.usuario == \"Eu\" == \"EU\"){\r\n            return <BoxMensagemEu key = {index} \r\n            useDoubleClick={this.onDoubleClickMensagem} > \r\n              <p>{msg.textoMensagem}</p>\r\n            </BoxMensagemEu>\r\n            }\r\n            else{\r\n              return <BoxMensagem key = {index} \r\n            useDoubleClick={this.onDoubleClickMensagem} > \r\n              <p><strong>{msg.usuario}</strong> </p><p>{msg.textoMensagem}</p>\r\n            </BoxMensagem>\r\n            }\r\n          })}\r\n        </BoxMensagens>\r\n        <BoxInputs>\r\n          <InputNome\r\n    \r\n          onKeyPress = {this.onChangeInputUsuario}\r\n            placeholder={'Nome'}\r\n            onChange = {this.onChangeInputUsuario}\r\n            value = {this.state.inputUsuario}\r\n          />\r\n\r\n          <InputMensagem \r\n           ref={textInput}\r\n          onKeyPress = {this.onChangeInputMensagem}\r\n            placeholder={'Mensagem'}\r\n            onChange = {this.onChangeInputMensagem}\r\n            value = {this.state.inputMensagem}\r\n          />\r\n          <ButtonEnviar onClick = {this.adicionaMensagem}>\r\n          <img src={iconeEnviar}/>\r\n          </ButtonEnviar>\r\n        </BoxInputs>\r\n      </Box1>\r\n    );\r\n  }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}